from controller import Robot, Motor, Camera, TouchSensor

TIME_STEP = 64

# Init robot and devices
robot = Robot()
left_motor = robot.getDevice("left_motor")
right_motor = robot.getDevice("right_motor")
left_motor.setPosition(float('inf'))
right_motor.setPosition(float('inf'))
left_motor.setVelocity(0.0)
right_motor.setVelocity(0.0)

camera = robot.getDevice("camera")
camera.enable(TIME_STEP)

bumper_left = robot.getDevice("bumper_left")
bumper_right = robot.getDevice("bumper_right")
bumper_left.enable(TIME_STEP)
bumper_right.enable(TIME_STEP)

MAX_SPEED = 6.28

# Ball color to detect (e.g., red ball)
target_color = (255, 0, 0)  # RGB

def detect_ball(image):
    width = camera.getWidth()
    height = camera.getHeight()
    red_pixels = []
    for x in range(width):
        for y in range(height):
            r = Camera.imageGetRed(image, width, x, y)
            g = Camera.imageGetGreen(image, width, x, y)
            b = Camera.imageGetBlue(image, width, x, y)
            if r > 200 and g < 100 and b < 100:  # Detect red
                red_pixels.append(x)
    if red_pixels:
        avg_x = sum(red_pixels) / len(red_pixels)
        if avg_x < width / 3:
            return 'left'
        elif avg_x > 2 * width / 3:
            return 'right'
        else:
            return 'center'
    return None

# Main loop
while robot.step(TIME_STEP) != -1:
    image = camera.getImage()
    direction = detect_ball(image)

    bump_left = bumper_left.getValue()
    bump_right = bumper_right.getValue()

    if bump_left or bump_right:
        # Avoid obstacle
        left_motor.setVelocity(-0.5 * MAX_SPEED)
        right_motor.setVelocity(-0.5 * MAX_SPEED)
        robot.step(500)  # back up
        left_motor.setVelocity(0.5 * MAX_SPEED)
        right_motor.setVelocity(-0.5 * MAX_SPEED)
        robot.step(300)  # turn
    elif direction == 'left':
        left_motor.setVelocity(0.3 * MAX_SPEED)
        right_motor.setVelocity(0.6 * MAX_SPEED)
    elif direction == 'right':
        left_motor.setVelocity(0.6 * MAX_SPEED)
        right_motor.setVelocity(0.3 * MAX_SPEED)
    elif direction == 'center':
        left_motor.setVelocity(0.6 * MAX_SPEED)
        right_motor.setVelocity(0.6 * MAX_SPEED)
    else:
        left_motor.setVelocity(0.0)
        right_motor.setVelocity(0.0)
